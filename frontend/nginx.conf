# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name weinzelt.duckdns.org;
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl;
    server_name weinzelt.duckdns.org;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/weinzelt.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/weinzelt.duckdns.org/privkey.pem;
    
    # Add Docker's internal DNS resolver
    resolver 127.0.0.11 valid=30s;
    
    # Serve static files
    location /static/ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # Handle API routes - match with or without trailing slash
    location ~ ^/(auth|users|groups|shifts|protected)(/.*)?$ {
        set $upstream http://fastapi:8000;
        proxy_pass $upstream$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Fix redirects to use HTTPS
        proxy_redirect http://weinzelt.duckdns.org/ https://weinzelt.duckdns.org/;
        proxy_redirect http://$host/ https://$host/;
    }
    
    # Serve React app
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
}